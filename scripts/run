#!/bin/bash
TYPE="gwman"
SITE_ROOT=$(realpath $(dirname $(realpath $0))/..)
export HOME=$SITE_ROOT
ROOT_DIR=$SITE_ROOT

source $SITE_ROOT/scripts/base.sh
_load_env $SITE_ROOT

ASDF=/massbit/massbitroute/app/gbc/bin/.asdf
GDNSD_VERSION=v3.8.0
GDNSD_DIR=$ASDF/installs/gdnsd/$GDNSD_VERSION

REPOS="/etc/letsencrypt|$GIT_PRIVATE_READ_URL/massbitroute/ssl.git|master \
/massbit/massbitroute/app/gbc|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_gbc.git \
/massbit/massbitroute/app/gbc/bin/.asdf|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_asdf.git|master \
$SITE_ROOT|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_${TYPE}.git \
$SITE_ROOT/etc/mkagent|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_mkagent.git"

_install() {
	systemctl disable systemd-resolved
	systemctl stop systemd-resolved

	echo "nameserver 8.8.8.8" >/etc/resolv.conf
	sed 's/_DOMAIN_/${DOMAIN}/g' $SITE_ROOT/etc/zone.tpl >$SITE_ROOT/data/zones/${DOMAIN}
	mkdir -p $SITE_ROOT/logs $SITE_ROOT/db
	_git_config
	for _pathgit in $REPOS; do
		_path=$(echo $_pathgit | cut -d'|' -f1)
		_url=$(echo $_pathgit | cut -d'|' -f2)
		_branch=$(echo $_pathgit | cut -d'|' -f3)
		_git_clone $_url $_path $_branch
	done

	ln -sf /massbit/massbitroute/app/gbc /massbit/massbitroute/app/src/gbc
	ln -sf /massbit/massbitroute/app/gbc/bin/openresty /usr/local/openresty
	apt-get update
	apt-get install -y git apache2-utils supervisor jq python-is-python2 libssl-dev \
		liburcu-dev libev-dev libsodium-dev libtool libunwind-dev libmaxminddb-dev

	systemctl enable supervisor
	systemctl start supervisor

	cp supervisor.conf /etc/supervisor/conf.d/${TYPE}.conf
	supervisorctl update

	# mkdir -p $SITE_ROOT/etc $SITE_ROOT/data $SITE_ROOT/logs

	# mkdir -p $SITE_ROOT/data/zones
	# sed 's/_DOMAIN_/${DOMAIN}/g' $SITE_ROOT/etc/zone.tpl >$SITE_ROOT/data/zones/${DOMAIN}

	# ln -sf /massbit/massbitroute/app/gbc /massbit/massbitroute/app/src/gbc
	# ln -sf /massbit/massbitroute/app/gbc/bin/openresty /usr/local/openresty
	# apt-get update
	# apt-get install -y git apache2-utils supervisor jq python-is-python2 libssl-dev \
	# 	liburcu-dev libev-dev libsodium-dev libtool libunwind-dev libmaxminddb-dev

	# cp supervisor.conf /etc/supervisor/conf.d/${TYPE}.conf

	# for svr in systemd-resolved; do
	# 	systemctl disable $svr
	# 	systemctl stop $svr
	# done

	# for svr in supervisor; do
	# 	systemctl enable $svr
	# 	systemctl start $svr
	# done

	# supervisorctl update
}

_add_cron() {
	cat <<EOF >/tmp/crontab
0 0 * * * $SITE_ROOT/scripts/run _update_ssl
EOF
	crontab /tmp/crontab
}

_rebuild_conf() {
	_dir=$SITE_ROOT/data/zones
	_file_ok=$SITE_ROOT/zones/$DOMAIN
	_file=$(mktemp)
	cat $_dir/$DOMAIN >$_file
	echo >>$_file

	find $_dir/dapi -type f -iname '*.zone' | while read f; do
		cat $f >>$_file
		echo >>$_file
	done

	find $_dir/gateway -type f -iname '*.zone' | while read f; do
		cat $f >>$_file
		echo >>$_file
	done

	find $_dir/node -type f -iname '*.zone' | while read f; do
		cat $f >>$_file
		echo >>$_file
	done

	mv $_file $_file_ok
}
_reload_gdnsd() {
	$GDNSD_DIR/sbin/gdnsd -c $SITE_ROOT checkconf
	if [ $? -eq 0 ]; then
		$GDNSD_DIR/bin/gdnsdctl -c $SITE_ROOT replace
	fi
}
_reload() {
	_add_cron
	_rebuild_conf
	_reload_gdnsd
	$SITE_ROOT/cmd_server _update
}

# _git_cmd() {
# 	_cmd=$1
# 	_url=$2
# 	_dir=$3
# 	_branch=$4
# 	if [ -z "$_branch" ]; then _branch=$MBR_ENV; fi
# 	st=1
# 	if [ "$_cmd" = "clone" ]; then
# 		# if [ -d "$_dir" ]; then rm -rf $_dir; fi
# 		mkdir -p $_dir
# 		git clone $_url $_dir -b $_branch
# 		git -C $_dir checkout $_branch
# 		git -C $_dir branch --set-upstream-to origin/$_branch
# 		git -C $_dir pull origin $_branch | grep -i "updating"
# 		st=$?
# 		echo $st

# 	elif [ "$_cmd" = "pull" ]; then
# 		git -C $_dir checkout $_branch
# 		git -C $_dir pull origin $_branch | grep -i "updating"
# 		st=$?
# 		echo $st
# 	fi
# 	return $st
# }

# _get_status_cmd() {
# 	_ret=$1
# 	shift
# 	$@
# 	st=$?
# 	if [ $st -eq 0 ]; then _ret=$st; fi
# 	return $_ret
# }
# _install_repos() {
# 	_git_config
# 	ret=1
# 	_get_status_cmd $ret _git_cmd clone $GIT_PRIVATE_URL/massbitroute/ssl.git /etc/letsencrypt master
# 	_get_status_cmd $ret _git_cmd clone $GIT_PUBLIC_URL/massbitprotocol/massbitroute_gbc /massbit/massbitroute/app/gbc
# 	_get_status_cmd $ret _git_cmd clone $GIT_PUBLIC_URL/massbitprotocol/massbitroute_asdf /massbit/massbitroute/app/gbc/bin/.asdf master
# 	_get_status_cmd $ret _git_cmd clone $GIT_PUBLIC_URL/massbitprotocol/massbitroute_mkagent $SITE_ROOT/etc/mkagent
# 	_get_status_cmd $ret _git_cmd clone $GIT_PUBLIC_URL/massbitprotocol/massbitroute_gwman $SITE_ROOT
# }

_update_ssl() {
	_git_config
	git_ssl='git -C /etc/letsencrypt'
	bash $SITE_ROOT/cert.sh _renew
	$git_ssl add /etc/letsencrypt
	$git_ssl commit -m update
	$git_ssl push origin master
}

_monitor() {
	echo mbr-gwman >vars/TYPE
	_update_sources $REPOS
	is_reload=$?
	if [ $is_reload -eq 0 ]; then
		$0 _reload
	fi
}

_service_gdnsd() {
	# apt install -y liburcu-dev libev-dev libsodium-dev libtool libunwind-dev libmaxminddb-dev

	mkdir -p $SITE_ROOT/run/dns
	exec $GDNSD_DIR/sbin/gdnsd -c $SITE_ROOT -RD start
}

_run() {
	rm -rf $SITE_ROOT/tmp/*
	sleep 3
	$SITE_ROOT/start_server
}

$@
